// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vavmpsjzmhmredomfptt.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZhdm1wc2p6bWhtcmVkb21mcHR0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2NzMwNjEsImV4cCI6MjA3MjI0OTA2MX0.QEEksX7wcrkJWc5JeFxaP7-4lT7ESY6_lFViB2jhLoI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

function getOrCreateClientId(): string {
  const key = 'x-client-id';
  const existing = typeof localStorage !== 'undefined' ? localStorage.getItem(key) : null;
  if (existing) return existing;
  // Simple UUID v4 generator (fallback) to avoid new deps
  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
    const r = (Math.random() * 16) | 0;
    const v = c === 'x' ? r : (r & 0x3) | 0x8;
    return v.toString(16);
  });
  try { localStorage.setItem(key, uuid); } catch (e) {
    // ignore write errors (private mode or disabled storage)
  }
  return uuid;
}

const X_CLIENT_ID = getOrCreateClientId();

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: {
      'X-Client-Id': X_CLIENT_ID,
    },
  },
});

export const CLIENT_ID = X_CLIENT_ID;